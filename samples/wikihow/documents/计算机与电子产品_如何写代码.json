{
    "document_id": 84,
    "domain": "wikihow",
    "name": "计算机与电子产品_如何写代码",
    "graph": {
        "1": {
            "data": "计算机与电子产品_如何写代码",
            "type": "root",
            "pid": "0"
        },
        "2": {
            "data": "随着技术的日益普及，对程序员的需求也在不断增加。编程是一种不断学习和完善的技能，但是每个想学习编程的人都需要一个切入点。无论你感兴趣的领域是什么，都有各种各样适合初学者学习的语言。请参见下面的步骤一了解如何学习代码。",
            "type": "ordinary",
            "pid": "1"
        },
        "3": {
            "data": "可选方法",
            "type": "ordinary",
            "pid": "1"
        },
        "4": {
            "data": "学习一门语言",
            "type": "sequence",
            "pid": "3"
        },
        "5": {
            "data": "不要太担心选择什么语言。",
            "type": "sequence-step",
            "pid": "4"
        },
        "6": {
            "data": "许多编程初学者在刚开始学习时，会很纠结选择哪种语言。刚开始学哪种语言，对学习数据结构和逻辑没有太大影响。数据结构和逻辑才是最重要的技能，学习任何语言都可以提高这些技能。",
            "type": "ordinary",
            "pid": "5"
        },
        "7": {
            "data": "选择一门语言时，只需关注你想学习开发哪种程序，然后选择一门入门语言。例如，如果你想学习网页开发，就从HTML5开始，并学习CSS、JavaScript和PHP作为补充。如果你想做桌面应用，那就从C++或其他基础编程语言开始。",
            "type": "ordinary",
            "pid": "5"
        },
        "8": {
            "data": "如果你以编程为职业，你会发现你可能永远不会使用第一次学会的编程语言，反而是在查阅文档和不断尝试的过程中学习语言。",
            "type": "ordinary",
            "pid": "5"
        },
        "9": {
            "data": "根据你选择的语言在网上寻找免费资源。",
            "type": "sequence-step",
            "pid": "4"
        },
        "10": {
            "data": "互联网是一座宝库，蕴藏着大量的免费语言学习教程、课程和视频。你可以在一天之内基本掌握任何入门语言。",
            "type": "ordinary",
            "pid": "9"
        },
        "11": {
            "data": "常用网站包括Bento、CodeAcademy、Code.org、html.net、KhanAcademy、Udacity、W3Schools、CodeSchool等等。",
            "type": "ordinary",
            "pid": "9"
        },
        "12": {
            "data": "wikiHow上也有专门的编程语言入门指南。",
            "type": "ordinary",
            "pid": "9"
        },
        "13": {
            "data": "你可以在YouTube上找到几乎所有编程场景的操作指南。",
            "type": "ordinary",
            "pid": "9"
        },
        "14": {
            "data": "StackExchange是更为知名的问答网站之一，可以解答你可能遇到的任何编程问题。",
            "type": "ordinary",
            "pid": "9"
        },
        "15": {
            "data": "下载一个好用的文本编辑器。",
            "type": "sequence-step",
            "pid": "4"
        },
        "16": {
            "data": "许多编程语言允许你在编写代码时使用外部文本编辑器。找一个可以查看缩进和代码标记的文本编辑器。",
            "type": "ordinary",
            "pid": "15"
        },
        "17": {
            "data": "常用程序包括Notepad++（Windows）、TextWrangler（OSX）或者JEdit（任何操作系统）。",
            "type": "ordinary",
            "pid": "15"
        },
        "18": {
            "data": "下载所需的编译器。",
            "type": "sequence-step",
            "pid": "4"
        },
        "19": {
            "data": "有些编程语言需要编译器来运行你创建的代码。编译器将你编写的代码转换成机器可以处理的低级语言。许多编译器是开源的，可以免费使用。需要编译器的语言包括：",
            "type": "ordinary",
            "pid": "18"
        },
        "20": {
            "data": "C",
            "type": "ordinary",
            "pid": "19"
        },
        "21": {
            "data": "C++",
            "type": "ordinary",
            "pid": "19"
        },
        "22": {
            "data": "C#",
            "type": "ordinary",
            "pid": "19"
        },
        "23": {
            "data": "Java",
            "type": "ordinary",
            "pid": "19"
        },
        "24": {
            "data": "BASIC",
            "type": "ordinary",
            "pid": "19"
        },
        "25": {
            "data": "Fortran",
            "type": "ordinary",
            "pid": "19"
        },
        "26": {
            "data": "开始你的第一个项目。",
            "type": "sequence-step",
            "pid": "4"
        },
        "27": {
            "data": "选择一个好的介绍性项目来帮助你入门。网上有各种建议和教程，但入门教程可以看——HTML基础网站，基础数据库和PHP表单函数，或者任何用编译程序语言编写的简易程序。",
            "type": "ordinary",
            "pid": "26"
        },
        "28": {
            "data": "注释所有代码。",
            "type": "sequence-step",
            "pid": "4"
        },
        "29": {
            "data": "所有编程语言都有注释功能，允许你输入不会被编译器处理的文本。这样你就可以向代码中添加注释。这些注释非常重要，既可以让别人知道你的代码是如何运作的，也可以提醒自己代码的用途。",
            "type": "ordinary",
            "pid": "28"
        },
        "30": {
            "data": "你还可以使用注释功能，从程序中快速移除用于测试的代码。在要移除的代码周围放置注释标记，然后通过删除注释标记来恢复代码。",
            "type": "ordinary",
            "pid": "28"
        },
        "31": {
            "data": "挑选其他项目和网页项目。",
            "type": "sequence-step",
            "pid": "4"
        },
        "32": {
            "data": "随着不断地学习，不要羞于查阅资料，看看别人是如何完成同样的任务。花点时间来理解代码的工作原理。",
            "type": "ordinary",
            "pid": "31"
        },
        "33": {
            "data": "有关如何查看网站源代码的详细信息，请参阅这篇指南。",
            "type": "ordinary",
            "pid": "31"
        },
        "34": {
            "data": "拓展自己的知识面",
            "type": "ordinary",
            "pid": "3"
        },
        "35": {
            "data": "报读课程。",
            "type": "ordinary",
            "pid": "34"
        },
        "36": {
            "data": "社区大学、技术学院和网络课程都能提供证书和课程，这些都能教你学会编程，并帮助你找到一份工作。像“计算机科学”这样的高学历并不总是必要的，但是有这样的学历有助于你找到一份全职的编程工作。",
            "type": "ordinary",
            "pid": "35"
        },
        "37": {
            "data": "与老师或编程专家进行一对一的交流益处多多，并且这不是在线资源能够提供的。",
            "type": "ordinary",
            "pid": "35"
        },
        "38": {
            "data": "课程有时会比较贵，所以需要权衡一下。如果编程只是一种爱好，也许不值得在课程上花费时间和金钱。如果你想把编程变成一种职业，课程可以给你提供很大的帮助。但是，如果你有天赋，这是完全没有必要的。",
            "type": "ordinary",
            "pid": "35"
        },
        "39": {
            "data": "拓展知识面。",
            "type": "ordinary",
            "pid": "34"
        },
        "40": {
            "data": "除了学习编程语言，学习逻辑和数学也会让你受益匪浅，因为高级编程通常需要这些知识。你不一定非要在学校里学习这些知识，但是课堂的学习环境会有所帮助。",
            "type": "ordinary",
            "pid": "39"
        },
        "41": {
            "data": "编程涉及到物理计算和其他模拟，需要精通算法和模型。",
            "type": "ordinary",
            "pid": "39"
        },
        "42": {
            "data": "逻辑是编程的基础，所以理解逻辑和进程能帮助你在编程时解决问题。",
            "type": "ordinary",
            "pid": "39"
        },
        "43": {
            "data": "大多数编程不需要了解高等数学，但是了解这些知识对你还是有益处的，并且可以优化程序。",
            "type": "ordinary",
            "pid": "39"
        },
        "44": {
            "data": "学习更多语言。",
            "type": "ordinary",
            "pid": "34"
        },
        "45": {
            "data": "当你很好地掌握了刚开始学习的语言时，就可以开始拓展自己的知识面了。找一门其他语言学习，对已经掌握的语言形成补充，或者根据你感兴趣的特定工作选择一门语言。相互补充的语言通常是最容易学习的，如HTML和CSS。",
            "type": "ordinary",
            "pid": "44"
        },
        "46": {
            "data": "Java是最常用的语言之一，Java开发人员通常有很多工作机会。Java可以运行在各种各样的系统上，并且有无数的应用程序。Java用于Android应用程序，是增长最快的市场之一。",
            "type": "ordinary",
            "pid": "44"
        },
        "47": {
            "data": "强烈推荐刚入行的电子游戏开发人员使用C++。学习如何在Unity（一种广泛使用的低成本游戏引擎）和UDK（流行的虚幻引擎的代码）中编写代码，可以为你打开机遇大门，不过它们在电子游戏行业以外就没那么有用了。",
            "type": "ordinary",
            "pid": "44"
        },
        "48": {
            "data": "如果你想做iPhone应用，Xcode和Objective-C将是你的主要工具。你还需要一台Mac电脑，因为Xcode只能在Mac电脑上编译。",
            "type": "ordinary",
            "pid": "44"
        },
        "49": {
            "data": "Python是一种服务器脚本语言，是比较容易学习的语言之一。Python用于Pinterest和Instagram等网页服务，非常简单，只需几天就能掌握基本知识。",
            "type": "ordinary",
            "pid": "44"
        },
        "50": {
            "data": "要有耐心。",
            "type": "ordinary",
            "pid": "34"
        },
        "51": {
            "data": "编程时会经常遇到挑战，尤其是在查找故障或实现新想法的时候。你应该学会满足和循序渐进，而不是急于求成。耐心会使你编写的代码更有效，进而使程序性能更好，同事关系更融洽。",
            "type": "ordinary",
            "pid": "50"
        },
        "52": {
            "data": "学会与他人合作。",
            "type": "ordinary",
            "pid": "34"
        },
        "53": {
            "data": "如果你和很多人合作完成一个项目，关于如何开展工作会有很多种观点。在企业里，团队合作几乎无法避免，除非你打算独立开发所有东西，否则就要做好与他人合作的准备。",
            "type": "ordinary",
            "pid": "52"
        },
        "54": {
            "data": "找一份能锻炼编程技能的工作。",
            "type": "ordinary",
            "pid": "34"
        },
        "55": {
            "data": "比如，作为志愿者设计网站或编写桌面应用程序。或者在一家小公司做兼职，这样就有机会给网站或简单的应用程序写代码。",
            "type": "ordinary",
            "pid": "54"
        },
        "56": {
            "data": "和其他程序员联系。",
            "type": "ordinary",
            "pid": "34"
        },
        "57": {
            "data": "有无数的程序员社团和聚会可以给你提供支持和启示。找一找本地的编程集会，参加编程马拉松或游戏制作节（具有共同主题的时限性活动），并在一些编程论坛上注册，多认识些朋友，培养自己的人脉。",
            "type": "ordinary",
            "pid": "56"
        },
        "58": {
            "data": "实践出真知。",
            "type": "ordinary",
            "pid": "34"
        },
        "59": {
            "data": "据估计，在成为计算机编程专家之前，大约需要15000个小时的练习。也就是多年的应用实践。只有花时间去实践，并且变得熟练才能真正精通编程。",
            "type": "ordinary",
            "pid": "58"
        },
        "60": {
            "data": "即使你不在工作时，也要试着每天花时间编程。利用业余时间编程可以带来突破和新思路。",
            "type": "ordinary",
            "pid": "58"
        }
    }
}